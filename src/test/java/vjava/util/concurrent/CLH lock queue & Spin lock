CLH lock queue通常用来实现自旋锁

     +------+  prev +-----+       +-----+
head |      | <---- |     | <---- |     |  tail
     +------+       +-----+       +-----+
     

tail引用维护了FIFO的线程等待队列，每个等待的线程拥有各自的prev引用（Java中通过ThreadLocal保存），
这样能保证所有等待线程的公平竞争，而且没有竞争同一个变量，每个线程只要等待自己的前继释放锁就可以了。
CLH lock queue一般用来实现自旋锁（Spin lock），自旋锁简单来说就是通过循环来等待而不是睡眠，这样的
好处是减小系统调用的开销。